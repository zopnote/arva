name: Build SDL3 for Multiple Platforms

on:
  push:
    branches:
      - main

jobs:
  windows:
    runs-on: windows-latest
    steps:

      - name: Install dependencies
        run: |
          choco install -y cmake dart-sdk ninja

      - name: Download Vulkan SDK
        run: |
          curl -L -o vulkan-sdk.zip https://sdk.lunarg.com/sdk/download/latest/windows/vulkan-sdk.zip

      - name: Unzip Vulkan SDK
        run: |
          unzip vulkan-sdk.zip -d C:\VulkanSDK

      - name: Set Vulkan SDK Path
        run: |
          $env:VULKAN_SDK = "C:\VulkanSDK\1.3.250.1\bin"
          [System.Environment]::SetEnvironmentVariable('VULKAN_SDK', $env:VULKAN_SDK, [System.EnvironmentVariableTarget]::User)
          $env:PATH = "$env:VULKAN_SDK;$env:PATH"
          [System.Environment]::SetEnvironmentVariable('PATH', $env:PATH, [System.EnvironmentVariableTarget]::User)

      - name: Download SDL3 Source
        run: |
          curl -L -o SDL3.zip https://github.com/libsdl-org/SDL/releases/download/preview-3.1.6/SDL3-3.1.6.zip

      - name: Extract SDL3 Source
        run: |
          unzip SDL3.zip -d SDL3_extracted


      - name: Generate build files
        working-directory: SDL3_extracted/SDL3-3.1.6
        run: |
          cmake -B build_files \
            -G Ninja \
            -DSDL_VULKAN=ON \
            -DSDL_OPENGL=ON \
            -DSDL_DIRECTX=ON

      - name: Build SDL3 for Windows
        working-directory: SDL3_extracted/SDL3-3.1.6/build_files
        run: |
          ninja

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-artifact
          path: SDL3_extracted/SDL3-3.1.6/build_files


  linux:
    runs-on: ubuntu-latest
    steps:
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.dart
            ~/.cache
          key: linux-deps-${{ runner.os }}-${{ hashFiles('**/build.gradle', '**/package.json', '**/*.dart') }}

      - name: Set up dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake git python3 ninja-build \
          libvulkan-dev mesa-common-dev libx11-dev libxext-dev libxrandr-dev libxi-dev \
          libasound2-dev libpulse-dev libudev-dev libdbus-1-dev libwayland-dev wayland-protocols \
          libxkbcommon-dev libdrm-dev
      - name: Set up Dart SDK
        run: |
          sudo apt-get install -y apt-transport-https wget
          wget -qO- https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/dart.gpg
          echo 'deb [signed-by=/usr/share/keyrings/dart.gpg arch=amd64] https://storage.googleapis.com/download.dartlang.org/linux/debian stable main' \
            | sudo tee /etc/apt/sources.list.d/dart_stable.list
          sudo apt-get update
          sudo apt-get install -y dart
      - name: Download SDL3 Source
        run: |
          curl -L -o SDL3.zip https://github.com/libsdl-org/SDL/releases/download/preview-3.1.6/SDL3-3.1.6.zip
      - name: Extract SDL3 Source
        run: |
          sudo apt-get install -y unzip
          unzip SDL3.zip -d SDL3_extracted
      - name: Generate build files for Linux
        working-directory: SDL3_extracted/SDL3-3.1.6
        run: |
          cmake -G Ninja -B build_files -DSDL_VULKAN=ON -DSDL_OPENGL=ON -DCMAKE_BUILD_TYPE=release
      - name: Build SDL3 for Linux
        working-directory: SDL3_extracted/SDL3-3.1.6/build_files
        run: |
          ninja
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-artifact
          path: SDL3_extracted/SDL3-3.1.6/build_files

  android:
    runs-on: ubuntu-latest
    steps:
      - name: Set up dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake git python3 ninja-build \
          libvulkan-dev mesa-common-dev libx11-dev libxext-dev libxrandr-dev libxi-dev \
          libasound2-dev libpulse-dev libudev-dev libdbus-1-dev libwayland-dev wayland-protocols \
          libxkbcommon-dev libdrm-dev
      - name: Install Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26d
          add-to-path: 'true'

      - name: Download SDL3 Source
        run: |
          curl -L -o SDL3.zip https://github.com/libsdl-org/SDL/releases/download/preview-3.1.6/SDL3-3.1.6.zip
      - name: Extract SDL3 Source
        run: |
          sudo apt-get install -y unzip
          unzip SDL3.zip -d SDL3_extracted
      - name: Generate build files for Android
        working-directory: SDL3_extracted/SDL3-3.1.6
        run: |
          cmake \
            -G Ninja \
            -B build_files_android \
            -DSDL_VULKAN=ON \
            -DSDL_OPENGL=ON \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake
      - name: Build SDL3 for Android
        working-directory: SDL3_extracted/SDL3-3.1.6/build_files_android
        run: |
          ninja
      - name: Upload Android artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-artifact
          path: SDL3_extracted/SDL3-3.1.6/build_files_android

  emscripten:
    runs-on: ubuntu-latest
    steps:
      - name: Set up dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake git python3 ninja-build \
          libvulkan-dev mesa-common-dev libx11-dev libxext-dev libxrandr-dev libxi-dev \
          libasound2-dev libpulse-dev libudev-dev libdbus-1-dev libwayland-dev wayland-protocols \
          libxkbcommon-dev libdrm-dev
      - name: Set up Emscripten
        uses: mymindstorm/setup-emsdk@v14

      - name: Download SDL3 Source
        run: |
          curl -L -o SDL3.zip https://github.com/libsdl-org/SDL/releases/download/preview-3.1.6/SDL3-3.1.6.zip
      - name: Extract SDL3 Source
        run: |
          sudo apt-get install -y unzip
          unzip SDL3.zip -d SDL3_extracted
      - name: Generate build files for Emscripten
        working-directory: SDL3_extracted/SDL3-3.1.6
        run: |
          emcmake cmake -G Ninja -B build_files_emscripten -DSDL_VULKAN=OFF -DSDL_OPENGL=ON -DCMAKE_BUILD_TYPE=release
      - name: Build SDL3 for Emscripten
        working-directory: SDL3_extracted/SDL3-3.1.6/build_files_emscripten
        run: |
          ninja
      - name: Upload Emscripten artifact
        uses: actions/upload-artifact@v3
        with:
          name: emscripten-artifact
          path: SDL3_extracted/SDL3-3.1.6/build_files_emscripten

  macos:
    runs-on: macos-latest
    steps:

      - name: Setup dependencies
        run: |
          brew install cmake ninja python3 sdl2 sdl2_mixer sdl2_image sdl2_ttf pkg-config
          brew tap dart-lang/dart
          brew install dart
      - name: Download SDL3 Source
        run: |
          curl -L -o SDL3.zip https://github.com/libsdl-org/SDL/releases/download/preview-3.1.6/SDL3-3.1.6.zip
      - name: Extract SDL3 Source
        run: |
          unzip SDL3.zip -d SDL3_extracted
      - name: Generate build files for macOS
        working-directory: SDL3_extracted/SDL3-3.1.6
        run: |
          cmake \
            -B build_files \
            -G Ninja \
            -DSDL_METAL=ON \
            -DSDL_VULKAN=ON
      - name: Build SDL3 for macOS
        working-directory: SDL3_extracted/SDL3-3.1.6/build_files
        run: |
          ninja
      - name: Upload macOS artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-artifact
          path: SDL3_extracted/SDL3-3.1.6/build_files

  ios:
    runs-on: macos-latest
    steps:

      - name: Setup dependencies
        run: |
          brew install cmake ninja python3 sdl2 sdl2_mixer sdl2_image sdl2_ttf pkg-config
          brew tap dart-lang/dart
          brew install dart
      - name: Download SDL3 Source
        run: |
          curl -L -o SDL3.zip https://github.com/libsdl-org/SDL/releases/download/preview-3.1.6/SDL3-3.1.6.zip
      - name: Extract SDL3 Source
        run: |
          unzip SDL3.zip -d SDL3_extracted
      - name: Generate build files for iOS
        working-directory: SDL3_extracted/SDL3-3.1.6
        run: |
          cmake \
            -G Ninja \
            -B build_files_ios \
            -DSDL_METAL=ON
      - name: Build SDL3 for iOS
        working-directory: SDL3_extracted/SDL3-3.1.6/build_files_ios
        run: |
          ninja
      - name: Upload iOS artifact
        uses: actions/upload-artifact@v3
        with:
          name: ios-artifact
          path: SDL3_extracted/SDL3-3.1.6/build_files_ios
